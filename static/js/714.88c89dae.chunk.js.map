{"version":3,"file":"static/js/714.88c89dae.chunk.js","mappings":"kUAiBMA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,YACrCC,SAAUJ,EAAAA,KAAaK,IAAI,EAAG,aAAaF,SAAS,cAI3CG,EAAY,WAErB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXT,MAAO,GACPE,SAAU,IAEdQ,iBAAkBb,EAClBc,SAAU,SAACC,GACPP,GAASQ,EAAAA,EAAAA,IAAMD,GACf,IAGR,OACIE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAM,SAASC,QAAQ,SAASC,UAAU,MAAKC,UACjDL,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACC,GAAG,QAAQC,EAAG,EAAGC,QAAQ,KAAIJ,UAC9BL,EAAAA,EAAAA,KAAA,QAAMH,SAAUJ,EAAOiB,aAAaL,UAChCM,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGX,MAAM,aAAYG,SAAA,EACtCL,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,SAAS,MAAMC,WAAW,OAAOC,YAAY,OAAOC,WAAW,OAAMb,SAAC,WACxEM,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CAACC,UAAW3B,EAAO4B,QAAQnC,OAASO,EAAO6B,OAAOpC,MAAMmB,SAAA,EAChEL,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAACC,QAAQ,QAAOnB,SAAC,mBAC3BL,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACFC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,QAAQ,UACRC,SAAUrC,EAAOsC,aACjBC,MAAOvC,EAAOK,OAAOZ,MACrB+C,OAAQxC,EAAOyC,cAEnBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAA9B,SAAEZ,EAAO6B,OAAOpC,YAErCyB,EAAAA,EAAAA,MAACQ,EAAAA,GAAW,CAACC,UAAW3B,EAAO4B,QAAQjC,UAAYK,EAAO6B,OAAOlC,SAASiB,SAAA,EACtEL,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAACC,QAAQ,WAAUnB,SAAC,cAC9BL,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACFE,GAAG,WACHD,KAAK,WACLE,KAAK,WACLC,QAAQ,UACRC,SAAUrC,EAAOsC,aACjBC,MAAOvC,EAAOK,OAAOV,SACrB6C,OAAQxC,EAAOyC,cAEnBlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAgB,CAAA9B,SAAEZ,EAAO6B,OAAOlC,eAErCY,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAACR,KAAK,SAASS,YAAY,SAASC,MAAM,OAAOlC,UAAU,IAAGC,SAAC,oBAQ1F,EC3EW,SAASkC,IAEpB,OACIvC,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAAnC,UACAL,EAAAA,EAAAA,KAACV,EAAS,KAGlB,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import * as Yup from 'yup';\nimport {\n    Box,\n    Button,\n    Flex,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Input,\n    Text,\n    VStack\n} from \"@chakra-ui/react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/authorization/authOperations';\n\n\nconst schema = Yup.object().shape({\n    email: Yup.string().email().required('Required'),\n    password: Yup.string().min(7, \"Too short\").required('Required'),\n});\n\n\nexport const LoginForm = () => {\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema: schema,\n        onSubmit: (values) => {  \n            dispatch(login(values));           \n            }}\n    )\n\n    return (\n        <Flex align=\"center\" justify=\"center\" marginTop=\"10%\">\n            <Box bg=\"white\" p={6} rounded=\"md\">\n                <form onSubmit={formik.handleSubmit}>\n                    <VStack spacing={4} align=\"flex-start\">\n                    <Text fontSize=\"2xl\" fontWeight=\"bold\" marginRight=\"auto\" marginLeft=\"auto\">Login</Text>\n                        <FormControl isInvalid={formik.touched.email && formik.errors.email}>\n                            <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                            <Input\n                                name=\"email\"\n                                id=\"email\"\n                                type=\"email\"\n                                variant=\"outline\"\n                                onChange={formik.handleChange}\n                                value={formik.values.email}\n                                onBlur={formik.handleBlur}\n                            />\n                            <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\n                        </FormControl>\n                        <FormControl isInvalid={formik.touched.password && formik.errors.password}>\n                            <FormLabel htmlFor=\"password\">Password</FormLabel>\n                            <Input\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                variant=\"outline\"\n                                onChange={formik.handleChange}\n                                value={formik.values.password}\n                                onBlur={formik.handleBlur}\n                            />\n                            <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\n                        </FormControl>\n                        <Button type=\"submit\" colorScheme=\"purple\" width=\"full\" marginTop=\"4\">\n                            Sign In\n                        </Button>\n                    </VStack>\n                </form>\n            </Box>\n        </Flex>\n    );\n    }","import { LoginForm } from \"components/LoginForm/LoginForm\";\n\n\nexport default function LoginPage () {\n\n    return (\n        <>\n        <LoginForm/>\n        </>\n    )\n}"],"names":["schema","Yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","login","_jsx","Flex","align","justify","marginTop","children","Box","bg","p","rounded","handleSubmit","_jsxs","VStack","spacing","Text","fontSize","fontWeight","marginRight","marginLeft","FormControl","isInvalid","touched","errors","FormLabel","htmlFor","Input","name","id","type","variant","onChange","handleChange","value","onBlur","handleBlur","FormErrorMessage","Button","colorScheme","width","LoginPage","_Fragment"],"sourceRoot":""}