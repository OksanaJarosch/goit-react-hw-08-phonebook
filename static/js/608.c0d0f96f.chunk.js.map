{"version":3,"file":"static/js/608.c0d0f96f.chunk.js","mappings":"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","sources":["redux/selectors.js","components/User/User.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook/Phonebook.styled.js","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/User/User.jsx","pages/MyPhonebookPage.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectVisibleContacts = createSelector( [selectContacts, selectFilter] ,\n    (contacts, filterQuery) => {\n        const visible = contacts.filter(\n                    contact => contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n                    );\n        return visible;\n    }\n    );","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmax-width: 400px;\nmargin: 36px auto 0 auto;\npadding: 18px;\nborder: 2px solid #d6995aa3;\nborder-radius: 8px;\nbackground-color: white;\nmargin-top: 10%;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 18px;\nfont-weight: 700;\nfont-size: 24px;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledInput = styled.input`\ndisplay: block;\nwidth: 250px;\nmargin: 8px 0 24px 0;\npadding: 16px;\nfont-size: 16px;\nborder-radius: 6px;\nborder: 1px solid #dcdcdc;\nheight: 32px;\n`;\n\nexport const StyledLabel = styled.label`\nfont-size: 18px;\n`;","import { useDispatch } from \"react-redux\";\nimport { StyledInput, StyledLabel } from \"./Filter.styled\"\nimport { updateFilter } from \"redux/filterSlice\";\n\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    \n    return (\n                <StyledLabel>\n                    Find contacts by name\n            <StyledInput type=\"text\" name=\"filter\" placeholder=\"Search\" onChange={evt => dispatch(updateFilter(evt.target.value))} />\n                    </StyledLabel>\n    )\n}\n","import { Form, Field, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\n\n\nexport const StyledForm = styled(Form)`\nmargin-bottom:36px;\n`;\n\nexport const StyledInput = styled(Field)`\ndisplay: block;\nwidth: 250px;\nmargin: 8px 0;\npadding: 16px;\nfont-size: 16px;\nborder-radius: 6px;\nborder: 1px solid #dcdcdc;\nheight: 32px;\n`;\n\nexport const Error = styled(ErrorMessage)`\nfont-size: 16px;\ncolor: #c7231b;\n`;\n\nexport const StyledLabel = styled.label`\nfont-size: 18px;\n`;\n\nexport const StyledButton = styled.button`\nmargin-top: 18px;\npadding: 4px;\nbackground-color: white;\nborder: transparent;\nborder-radius: 4px;\nbox-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08), 0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n\n&:hover{\n    background-color: #ededed;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 2px 1px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);\n}\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { StyledForm, StyledInput, StyledLabel, Error } from './Phonebook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { addNewContact } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/selectors';\nimport toast from 'react-hot-toast';\nimport { Button } from '@chakra-ui/react';\n\n\nconst schema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too short\").required('Required'),\n    number: Yup.string().matches(/^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/, \"It must be min 5 numbers (1234567 or 123-45-67)\").required('Required'),\n});\n\n\nexport const Phonebook = () => { \n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n\n    const handleAddContact = values => {\n    \n    const checkContact = contacts.some(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n\n    if (checkContact) {\n        Report.warning(\n        'Contact has not been added.',\n        `${values.name} is already in contacts.`,\n        'Okay',\n        );\n        return\n        } \n        dispatch(addNewContact(values));\n        toast.success('Successfully created!');\n    }\n\n    \n        return (\n                <Formik\n                    initialValues={{\n                        name: '',\n                        number: '',\n                    }}\n                    validationSchema={schema}\n                onSubmit={(values, actions) => {              \n                    handleAddContact(values);\n                        actions.resetForm();\n                    }}\n                >\n\n                            <StyledForm autoComplete=\"off\">\n                    <StyledLabel>\n                        Name\n                            <StyledInput type=\"text\" name=\"name\" placeholder=\"New contact\"/>\n                            <Error name=\"name\" component=\"p\"/>\n                        </StyledLabel>\n                        <StyledLabel>\n                        Number\n                            <StyledInput type=\"tel\" name=\"number\" placeholder=\"Enter a number\"/>\n                            <Error name=\"number\" component=\"p\"/>\n                    </StyledLabel>\n                    <Button variant='outline' colorScheme=\"purple\" size='sm' marginTop=\"4\" type=\"submit\" disabled={isLoading}>Add contact</Button>\n                    </StyledForm>\n                </Formik>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const Contact = styled.li`\nlist-style: none;\n`;\n\nexport const Span = styled.span`\nline-height: 48px;\npadding-right: 12px;\nfont-size: 18px;\n`;\n\nexport const Btn = styled.button`\ndisplay: inline-flex;\nalign-items: center;\njustify-content: center;\n\nwidth: 24px;\nheight: 24px;\ntext-align: center;\nfont-size: 12px bold;\nbackground-color: transparent;\nborder: transparent;\nborder-radius: 8px;\nbox-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08), 0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(229 190 151 / 9%);\n&:hover{\n    background-color: #ededed;\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 2px 1px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);\n}\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { Contact, Span, Btn } from \"./Contacts.styled\";\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { useEffect } from \"react\";\nimport { deleteContact, fetchContacts } from \"redux/contacts/operations\";\nimport { selectContacts, selectError, selectFilter, selectVisibleContacts } from \"redux/selectors\";\nimport toast from 'react-hot-toast';\n\nexport const Contacts = () => {\n    \n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const visible = useSelector(selectVisibleContacts);\n    const filter = useSelector(selectFilter);\n    const error = useSelector(selectError);\n\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n\n    const getVisibleContacts = () => {\n\n    if (filter === \"\") {\n        return contacts;\n    }\n    return visible;\n    };\n\n    const visibleContacts = getVisibleContacts();\n\n\n    const onDelete = async (id) => {\n            await dispatch(deleteContact(id));\n            error && toast.error('Error deleting contact.');\n    }\n\n    return (\n        <>\n            <ul>\n            {visibleContacts.map(contact => {\n                const { id, name, number } = contact;\n\n                    return (\n                        <Contact key={id}>\n                            <Span>{name}:\n                            </Span>\n                            <Span>{number}</Span>\n                            <Btn type=\"button\" onClick={() => onDelete(id)}><RiDeleteBin6Line /></Btn>\n                        </Contact>\n                    )\n                })}\n        </ul>\n        </>\n    )\n};","import { useSelector } from \"react-redux\";\nimport { selectError, selectIsLoading } from \"redux/selectors\";\nimport { LineWave } from \"react-loader-spinner\";\nimport { Container, Title } from \"./User.styled\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Phonebook } from \"components/Phonebook/Phonebook\";\nimport { Contacts } from \"components/Contacts/Contacts\";\n\n\nexport const User = () => {\n\nconst contacts = useSelector(state => state.contacts.items);\nconst error = useSelector(selectError);\nconst isLoading = useSelector(selectIsLoading);\n\nreturn (\n    <Container>\n    <Title>New Contact</Title>\n    <Phonebook></Phonebook>\n\n    <Title>My Phonebook</Title>\n    {contacts.length > 0 ? <Filter></Filter>\n        : (!error && !isLoading && <p>You don't have any contacts</p>)}\n    <Contacts></Contacts> \n    {error && <p>{error}</p>}\n    {isLoading && <LineWave\nheight=\"100\"\nwidth=\"100\"\ncolor=\"#4fa94d\"\nariaLabel=\"line-wave\"\nwrapperStyle={{}}\nwrapperClass=\"\"\nvisible={true}\nfirstLineColor=\"\"\nmiddleLineColor=\"\"\nlastLineColor=\"\"\n/>}\n    </Container> \n)\n};","import { User } from \"components/User/User\";\n\n\nexport default function MyPhonebookPage () {\n\n    return (\n        <>\n        <User/>\n        </>\n    )\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterQuery","contact","name","toLowerCase","includes","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","StyledInput","StyledLabel","Filter","dispatch","useDispatch","_jsxs","children","_jsx","type","placeholder","onChange","evt","updateFilter","target","value","StyledForm","Form","Field","Error","ErrorMessage","_templateObject3","_templateObject4","_templateObject5","schema","Yup","shape","min","required","number","matches","Phonebook","useSelector","Formik","initialValues","validationSchema","onSubmit","values","actions","some","Report","concat","addNewContact","toast","handleAddContact","resetForm","autoComplete","component","Button","variant","colorScheme","size","marginTop","disabled","Contact","Span","Btn","Contacts","visible","useEffect","fetchContacts","visibleContacts","onDelete","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_context","prev","next","deleteContact","stop","_x","apply","arguments","_Fragment","map","onClick","RiDeleteBin6Line","User","length","LineWave","height","width","color","ariaLabel","wrapperStyle","wrapperClass","firstLineColor","middleLineColor","lastLineColor","MyPhonebookPage"],"sourceRoot":""}